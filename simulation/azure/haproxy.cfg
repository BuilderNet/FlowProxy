global
  # Maximum number of concurrent connections
  maxconn 4096
  # System limits configuration
  ulimit-n 32768

defaults
  mode http
  timeout connect 5s
  timeout client 30s
  timeout server 30s
  timeout http-request 2s
  timeout http-keep-alive 10s
  log global

  compression algo gzip
  compression type text/html text/plain application/json

frontend default
  bind *:80
  bind *:443 ssl crt /usr/local/etc/haproxy/certs/ strict-sni

  # Force HTTPS redirect
  http-request redirect scheme https code 301 unless { ssl_fc }

  # Stick table to track connections and bandwidth
  stick-table type ip size 100k expire 5m store conn_rate(10s),bytes_in_rate(1m),conn_cur,http_req_rate(10s)

  # Track client in stick table
  http-request track-sc0 src

  http-request return status 200 content-type text/plain string "OK\n" if { path '/livez' }

  default_backend user_of

frontend system
  bind *:5544 ssl crt /usr/local/etc/haproxy/certs/ strict-sni
  default_backend system_of

frontend prometheus
  bind 127.0.0.1:8405
  http-request use-service prometheus-exporter if { path /metrics }
  no log

frontend public_cert
  bind 127.0.0.1:14727
  http-request return status 200 content-type text/plain file "/usr/local/etc/haproxy/static/le.cer"

backend user_of
  http-reuse always

  option httpchk GET /livez
  http-check expect status 200
  server user_of1 127.0.0.1:5543 check inter 5s fall 3 rise 1

backend system_of
  http-reuse always

  option httpchk GET /livez
  http-check expect status 200
  server system_of1 127.0.0.1:5542 check inter 5s fall 3 rise 1