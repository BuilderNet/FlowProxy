image := 'shadow-buildernet'
container-name := 'shadow-buildernet'

# Extra shared memory for shadow + flag for determinism
# Explanation: https://github.com/shadow/shadow/blob/main/ci/run.sh
run-args := '--shm-size=1024g --security-opt=seccomp=unconfined --cpuset-cpus=0-7'

# Display available commands
help:
  @just --list --unsorted

# Build a docker image for running shadow simulations
build:
	docker build -t {{image}} -f Dockerfile ..

# Run a shadow simulation with the given scenario file, see list in scenarios/
run scenario='buildernet.yaml': clean-container
	docker run {{run-args}} --name {{container-name}} -v ./scenarios:/root/scenarios:ro -it {{image}} \
		/bin/bash -c './shadow --template-directory /root/testdata/ scenarios/{{scenario}}'
	@just get-results

# Download the simulation results from the container
get-results:
	docker cp {{container-name}}:/root/shadow.data .
	@echo 'Simulations results have been downloaded to shadow.data/'

# View the logs of the given Shadow process
logs process:
	docker exec {{container-name}} bash -c 'cat shadow.data/hosts/{{process}}/*.1000.stdout' | less -R	

# Tail the logs of the given Shadow process
tail process:
	docker exec {{container-name}} bash -c 'tail -f shadow.data/hosts/{{process}}/*.1000.stdout'

# Delete the copied directory containing the simulation results
clean-results:
	rm -rf shadow.data

# Delete the container used for simulation
clean-container:
	docker rm -f {{container-name}}

# Delete the built image
clean-image:
	docker rmi -f {{image}}

# DELETE EVERYTHING, HACK THE PLANET!!!
clean-all: clean-results clean-container clean-image
